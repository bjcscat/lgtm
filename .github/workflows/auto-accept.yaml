name: auto-accept
on:
  pull_request_target:
    types: [opened, reopened, synchronize, ready_for_review]
  pull_request:
    types: [labeled, unlabeled]

permissions:
  contents: write
  pull-requests: write
  checks: read
  statuses: read

jobs:
  auto-approve-and-merge:
    if: ${{ !github.event.pull_request.draft }}
    runs-on: ubuntu-latest
    steps:
      - name: Check for merge conflicts
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            
            // Check if PR is mergeable
            const { data: pullRequest } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number
            });
            
            if (pullRequest.mergeable === false) {
              core.setFailed('PR has merge conflicts');
            } else if (pullRequest.mergeable === null) {
              // GitHub is still calculating mergeable status, wait and check again
              await new Promise(resolve => setTimeout(resolve, 2000));
              
              const { data: updatedPR } = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number
              });
              
              if (updatedPR.mergeable === false) {
                core.setFailed('PR has merge conflicts');
              } else if (updatedPR.mergeable === null) {
                core.setFailed('Unable to determine PR merge status');
              }
            }

      - name: Auto-approve PR
        if: ${{ success() }}
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              event: "APPROVE",
              body: "lgtm!"
            });

      - name: Auto-merge PR
        uses: pascalgn/automerge-action@v0.16.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_LABELS: "!workflows,!license"
          MERGE_METHOD: "squash"
          MERGE_COMMIT_MESSAGE: "automatic"
          MERGE_DELETE_BRANCH: true
